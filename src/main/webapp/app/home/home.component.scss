/* ==========================================================================
Main page styles
========================================================================== */

.hipster {
  display: inline-block;
  width: 347px;
  height: 497px;
  background: url('../../content/images/jhipster_family_member_2.svg') no-repeat center top;
  background-size: contain;
}

/* wait autoprefixer update to allow simple generation of high pixel density media query */
@media only screen and (-webkit-min-device-pixel-ratio: 2),
  only screen and (-moz-min-device-pixel-ratio: 2),
  only screen and (-o-min-device-pixel-ratio: 2/1),
  only screen and (min-resolution: 192dpi),
  only screen and (min-resolution: 2dppx) {
  .hipster {
    background: url('../../content/images/jhipster_family_member_2.svg') no-repeat center top;
    background-size: contain;
  }
}

/* CSS reset */
*,
*::after,
*::before {
  box-sizing: inherit;
  margin: 0;
  padding: 0;
}

/* This is to keep the card centered (within its container) when opened */
.card:hover {
  box-shadow: -0.1rem 1.7rem 6.6rem -3.2rem rgba(0, 0, 0, 0.75);
  width: 300px;
}

.card {
  //margin: 30px auto;
  width: 260px;
  height: 120px;
  border-radius: 10px;
  box-shadow: 3px 3px 15px 4px rgba(0, 0, 0, 0.25), -3px -3px 15px 4px rgba(0, 0, 0, 0.22);
  cursor: pointer;
  transition: 0.4s;
}

.card .card_image {
  width: inherit;
  height: inherit;
  border-radius: 10px;
}

.card .card_image img {
  width: inherit;
  height: inherit;
  border-radius: 10px;
  object-fit: cover;
}

.card .card_title {
  text-align: center;
  border-radius: 0px 0px 40px 40px;
  font-family: sans-serif;
  color: #ffffff;
  font-weight: bold;
  font-size: 30px;
  margin-top: -40px;
  height: 40px;
}

.card:hover {
  transform: scale(0.9, 0.9);
  box-shadow: 3px 3px 15px 5px rgba(0, 0, 0, 0.25), -3px -3px 15px 5px rgba(0, 0, 0, 0.22);
}

.title-white {
  color: white;
}

.title-black {
  color: black;
}

@media all and (max-width: 300px) {
  .card-list {
    /* On small screens, we are no longer using row direction but column */
    flex-direction: column;
  }
}
